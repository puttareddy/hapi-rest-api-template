import { injectable, inject } from "inversify";
import * as Promise from "bluebird";
import * as Consul from "consul";

export let Symbols = {
    Consul: Symbol("Consul"),
    IConsulService: Symbol("IConsulService"),
};

export interface IConsulService {
    getValueForKey(key: string): Promise<string>;
    setValueForKey(key: string, value: string): Promise<boolean>;
}

@injectable()
export class ConsulService implements IConsulService {

    private consulClient;

    constructor(@inject(Symbols.Consul) client: Consul.Consul) {
        this.consulClient = client;
    }

    public getValueForKey(key: string): Promise<string> {
        return this.consulClient.kv
            .get(key)
            .then(result => result.Value);
    }

    public setValueForKey(key: string, value: string): Promise<boolean> {
        return this.consulClient.kv
            .set(key, value)
            .then(() => true);
    }
}
